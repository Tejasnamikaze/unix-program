#include<signal.h>
#include<unistd.h>
#include<stdlib.h>
#include<stdio.h> 
int i=0;
void handle_sigsegv(int sig)
{
printf("\nNull pointer exception %d\n", sig);
exit(0);
}
int main()
{
signal(SIGSEGV,handle_sigsegv);
char *c=NULL; 
printf("%c",c[9]);
return 0;
}
//sigint
#include<signal.h>
#include<unistd.h>
#include<stdlib.h>
#include<stdio.h>
int i=0;
void handle_sigint(int sig)
{
printf("Caught signal %d\n", sig);
i=1;
exit(0);
} 
int main()
{
signal(SIGINT, handle_sigint);
while (!i)
{
printf("Inside loop");
sleep(1);
}
return 0;
}

//13
#include<stdio.h>
#include<signal.h>
#include<stdlib.h>
int main()
{
  sigset_t mask;
  sigemptyset(&mask); //initializes the signal set

   if(sigprocmask(0,0,&mask) < 0)
              { printf("error"); exit(1); }
  if(sigismember(&mask, SIGINT) == 1)
      printf("SIGINT IS A MEMBER");
  else
    {
     printf("SIGINT IS NOT A MEMBER");
     sigaddset(&mask, SIGINT);
     if(sigprocmask(SIG_SETMASK, &mask, 0) <0)
          {printf("error");
          exit(1);}
     else
       {
             if(sigismember(&mask, SIGINT) == 1)
                      printf("SIGINT IS A NEW MEMBER");
              else
                       printf("SIGINT IS STILL NOT A MEMBER");
    }
} }
